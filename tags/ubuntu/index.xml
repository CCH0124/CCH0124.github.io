<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubuntu on</title><link>https://cch0124.github.io/tags/ubuntu/</link><description>Recent content in Ubuntu on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://cch0124.github.io/tags/ubuntu/index.xml" rel="self" type="application/rss+xml"/><item><title>NFS</title><link>https://cch0124.github.io/project/2020-04-27-nfs/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2020-04-27-nfs/</guid><description>NFS 是經由 LAN 或 WAN 存取遠端檔案。它的共用是基於 Server 和 Client 關係。因此設定 NFS 時需要有網路位置和共享路徑。
Env 學校實驗室A系統 ubuntu 12.04 公網 學校實驗室B另一台主機 公網 Server Install sudo apt-get install nfs-kernel-server share dir setting // 學校實驗A室備份都放置 /home1/....../backup/NFS // share_dir client_ip(env setting) $ sudo vi /etc/exports share_dir 實驗室B_IP(rw,sync,no_root_squash,insecure,no_subtree_check) $ sudo chown nobody:nogroup share_dir $ sudo service nfs-kernel-server restart client_ip 就是實驗室B_IP，因為只限制該B實驗室存取，如果使用 * 則表示所有都可存取。
Option rw read and write operations sync write any change to the disc before applying it no_subtree_check: prevent subtree checking no_root_squash insecure Client Install sudo apt-get install nfs-common Mount directory of NFS $ sudo mount [nfs_server_ip]:[server_share_dir] [client_dir] 參考資料 mount 問題參考</description></item><item><title>How exclude file ?</title><link>https://cch0124.github.io/blog/2019-12-12-rm-exclude-file/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-12-12-rm-exclude-file/</guid><description>使用方式 find . -type f | grep -v &amp;#34;.json&amp;#34; | xargs rm 透過 type 可指定檔案（f）或是目錄（d），在藉由 grep 的 -v 反向選取，之後再驅動 rm。如果想要多個條件的話要藉由 grep 配合規則表示。</description></item><item><title>淺談 sudoers</title><link>https://cch0124.github.io/blog/2019-11-17-sudoers/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-11-17-sudoers/</guid><description>描述 因為在學校要做資訊安全的報告，因此對帳號提權部分做了一點研究。本篇會對於 sudoers 和 sudo 的使用方式作介紹。主要探討的是為何在安裝 ubuntu 時，設定的使用者會有 sudo 提權的功能。
對於 sudo 的描述在先前文章有提過。
sudoers 配置檔的預設某些內容，格式為 使用者帳號 登入者的來源主機名稱=(可切換的身份) 可下達的指令。
... # User privilege specification root ALL=(ALL:ALL) ALL # Members of the admin group may gain root privileges %admin ALL=(ALL) ALL # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) ALL ... 使用者帳號 可以使用 sudo 帳號名稱 或者以 % 為開頭表示已 GID 設定 登入者的來源主機名稱 限制使用者從特定網路主機連線，才能使用 sudo 指令 值 ALL 則代表不限制來源主機。 可切換的身份 值是填入帳號的 UID 取得這些帳號的權限 ALL 表示任何都可取得 可下達的指令 取得提權權限時可下的指令 ALL 表示執行的指令沒被限制 sudo usage $ sudo -u [UID] ls [FILE_PATH] # 取得該 UID 的權限，並執行指令 $ sudo -g [GID] ls [FILE_PATH] # 取德該 GID 的權限，並執行指令 Example cch 為安裝時，設定的使用者。test 則是新增的。</description></item><item><title>at 和 crontab 使用</title><link>https://cch0124.github.io/blog/2019-09-01-schedule/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-09-01-schedule/</guid><description>工作排程 at 單次工作排程 crontab 循環定期排程 常見工作可能有，備份、自動更新、網路一些工具等。
單次工作排程 at 參數 說明 -m 完成後寄信 -l 列出系統上所有排程 -d 取消一個工作 -c 列出後面工作實際指令 example $ at now +1 minutes warning: commands will be executed using /bin/sh at&amp;gt; echo &amp;#34;Test&amp;#34; &amp;gt; ../cch/text.at at&amp;gt; &amp;lt;EOT&amp;gt; job 3 at Sun Sep 1 09:17:00 2019 $ atq # 查排程 3 Sun Sep 1 09:17:00 2019 a cch 循環定期排程 crontab |參數|說明| |-e|編輯所有使用帳號的 crontab| |-l|編輯所有使用帳號的排程列表|</description></item><item><title>rsync 應用</title><link>https://cch0124.github.io/project/2019-07-28-rsync/</link><pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2019-07-28-rsync/</guid><description>Description 我是用 NAS 存放備份檔。方式有 2 種
rsync 來建立鏡像資料夾。您需先用 CIFS 或 NFS 來將 Synology NAS 上的資料夾掛載至 Linux 伺服器。 Linux 執行指令，無需掛載資料夾。 其中第 2 種方式是我實做出來的方式。
rsync rsync 是一種異地備份軟體，與一般備份軟體不同的是，rsync 採用增量備份的方式，此類備份方式在每次備份前會先比較兩邊資料的差異，然後僅將差異的資料備份過去，而非備份全部的資料。
rsync 用於遠程複製和同步文件和目錄，以及在 Linux/Unix 系統中本地複製和同步。借助 rsync 命令，您可以跨目錄，跨硬碟和網路遠端和本地複製和同步數據，在兩台 Linux 計算機之間執行數據備份和鏡像。
rsync 的運作方式分為以下兩種：
伺服器（Server）模式
以常駐（Daemon）的方式運作，亦即以伺服器模式來服務（預設通訊埠為873），通常會在目的端運作，接收其他主機的備份資訊。 客戶端（Client）模式
以一般程式方式運作，可視為使用者端（Client）程式，通常用在來源端主機上，將資料備份到備份主機上運作。 rsync 優點和功能 它有效的將文件複製到遠端系統或從遠端系統同步文件。 支持複製 links、devices、owners、groups 和 permissions。 它比 scp（Secure Copy）更快，因為 rsync 使用遠端更新協議，它允許僅傳輸兩組文件之間的差異。第一次，它將文件或目錄的全部內容從源複製到目標，但是從下次起，它僅將更改的塊和字節複製到目標。 Rsync 消耗較少的 bandwidth，因為它使用壓縮和解壓縮方法，同時發送和接收數據兩端。 rsynv 參數 -v</description></item><item><title>du</title><link>https://cch0124.github.io/blog/2019-07-15-du/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-07-15-du/</guid><description>du 指令 用途式顯示目錄或檔案大小
du 的 arg 參數 功能 -a 顯示目錄中個別檔案大小 -b 以 byte 為單位顯示大小 -c 顯示個別檔案大小以及總和 -D 顯示符號連接的來源檔大小 -h 以 k（KB）、M（MB）、G（GB）顯示 -H 以 1000 為 k 的單位（非 1024） -s 只顯示總和 -S 顯示目錄內容時，不包含子目錄大小 -x 若目錄中有不同的檔案系統，就不顯示 &amp;ndash;max-path 僅搜尋指定的目錄層級 &amp;ndash;exclude 忽略指定檔案或目錄</description></item><item><title>Net Namespaces</title><link>https://cch0124.github.io/project/2019-07-03-namespace/</link><pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2019-07-03-namespace/</guid><description>Namespaces tags: SDN Namespaces 是 Linux kernel 的一項功能，它對 kernel 資源進行區分隔離，使得一組行程看到一組資源，而另一組行程看到一組不同的資源。 好比一棟房子有多個房間，一個房間表示一組資源，妹妹住一間、哥哥住一間，彼此之間是相互看不到內部資源的，為每一個人提供隱私。
可分為下面幾列
pid Namespaces net Namespaces ipc Namespaces mnt Namespaces uts Namespaces user Namespaces Namespaces 不限制對 CPU、memory 和 disk 等物理上資源的存取。該存取由 cgroups 的 kernel 功能計算和限制。
Experiment Create network namespace cch@ubuntu:~$ sudo ip netns add red # create a new named network namespace cch@ubuntu:~$ sudo ip netns add blue cch@ubuntu:~$ sudo ip netns list # show all of the named network namespaces blue red 此圖是利用上面指令達成的構圖。建立 red 和 blue 的 namespace。</description></item><item><title>ups 應用</title><link>https://cch0124.github.io/project/2018-12-24-apc-ups/</link><pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2018-12-24-apc-ups/</guid><description>APC UPS 環境 Back-UPS Pro 700 ubuntu 12 安裝套件 在 ubuntu 安裝 ups 套件，讓 ups 能控制系統
$ sudo apt-get -y install apcupsd ... Please check your configuration ISCONFIGURED in /etc/default/apcupsd 配置檔 /etc/apcupsd$ tree . ├── apccontrol ├── apcupsd.conf ├── changeme ├── commfailure ├── commok ├── hosts.conf ├── killpower ├── multimon.conf ├── offbattery ├── onbattery └── ups-monitor 0 directories, 11 files /etc/apcupsd$ sudo vi apcupsd.conf UPSCABLE usb # 定義將 UPS 連接到 computer 的電纜類型。 UPSTYPE usb DEVICE # 啟用自動檢測，不使用串行電纜交換信號 SCRIPTDIR /etc/apcupsd # apccontrol和事件腳本所在的目錄。 UPSNAME UPS_700 在 apcupsd 包電源故障的情況下，通知給商用電源的用戶，當商用電源未恢復時，損失如果電池耗盡，或指定的超時時間段已經過去，它已達到指定的電池充電速率任一，或已經達到剩餘電池壽命（通過基於內部UPS計算電力消耗速率來確定）。如果滿足任何這些關閉條件，請執行關閉。</description></item><item><title>前人沒留下資料，需要通靈</title><link>https://cch0124.github.io/blog/2018-12-10-forget-password/</link><pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-12-10-forget-password/</guid><description>unix 忘記密碼 在開機時，按下 Esc。開啟 GRUB 開機選單 按下鍵盤上的「e」鍵 會看一個參數編輯的視窗 找有 linux /boot/vmlinuz-X.XX.X 在最後一行加上 single 參數 編輯好參數之後，按下 Ctrl + x 或是 F10 開機，接著就會進入單機模式。 在單機模式之下，使用 passwd 更改一般使用者（或 root）的密碼 最後執行 reboot 重新開機，就可以用新的密碼登入了。 Ref gtwang</description></item><item><title>apt 使用</title><link>https://cch0124.github.io/blog/2018-11-25-apt/</link><pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-11-25-apt/</guid><description>apt apt 是 Debian 和 Ubuntu 系統中的核心工具。可以使用 apt 指令安裝或刪除應用程式。
應用 因為我在學校有負責管理 bit 系統，因為當時交接給我的人得知的資訊很少，當時也想了解系統上所安裝的應用程式和依賴的應用程式，因此對 apt 指令的應用做了一個筆記。 交接時文件很重要，這會讓下一個交接者加速了解環境。
取得更新（update） $ sudo apt update Hit:1 http://us.archive.ubuntu.com/ubuntu xenial InRelease Hit:2 https://download.docker.com/linux/ubuntu xenial InRelease Get:3 http://us.archive.ubuntu.com/ubuntu xenial-updates InRelease [109 kB] Get:4 http://us.archive.ubuntu.com/ubuntu xenial-backports InRelease [107 kB] Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [109 kB] Fetched 325 kB in 4s (66.5 kB/s) Reading package lists... Done Building dependency tree Reading state information... Done 163 packages can be upgraded. Run 'apt list --upgradable' to see them.</description></item><item><title>新增網站</title><link>https://cch0124.github.io/blog/2018-11-23-new-web/</link><pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-11-23-new-web/</guid><description>事由 每年系統會增加一個期刊，於是我照著之前先人的 SOP 走，但群組設定部分好像有小差錯。
更改群組名稱 $ cat /etc/group | grep iihmsp sudo:x:27:mykuo,itachi,jni,iihmsp19 www-data:x:33:ychuang,jni,jihmsp,iihmsp19 iihmsp14:x:1004: iihmsp15:x:1005: iihmsp11:x:1010: iihmsp16:x:1035: iihmsp17:x:1040: iihmsp2019:x:1052: itachi@ubuntu:/home/home1$ sudo groupmod -n iihmsp2019 iihmsp19 groupmod: group 'iihmsp19' does not exist itachi@ubuntu:/home/home1$ sudo groupmod -n iihmsp19 iihmsp2019 itachi@ubuntu:/home/home1$ cat /etc/group | grep iihmsp sudo:x:27:mykuo,itachi,jni,iihmsp19 www-data:x:33:ychuang,jni,jihmsp,iihmsp19 iihmsp14:x:1004: iihmsp15:x:1005: iihmsp11:x:1010: iihmsp16:x:1035: iihmsp17:x:1040: iihmsp19:x:1052:</description></item><item><title>掛載硬碟</title><link>https://cch0124.github.io/blog/2018-09-15-disk-mount/</link><pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-09-15-disk-mount/</guid><description>事由 那年是我剛進實驗室的第 2 個月，因為我對 linux 系統較熟，所以我接了管理的這一部分。沒想到此系統沒幾天後硬碟竟然壞了，於是我呼叫我朋友幫我處裡硬碟部分（硬碟還原），我負責掛載。
分割區切割 Linux 的分割區有 90 多種，但實際只會用到四種，數字表分割代碼
Linux swap（82） 虛擬記憶體 Linux（83） 適和使用分割區 Extended（5） 要劃分四個分割區以上，必須使用 Linux LVM（8e） LVM 分割區 新增硬碟至 ubuntu 檢查第二顆是否有偵測到
$ dmesg |grep hd 再次確認
$ sudo fdisk -l /dev/sdb # 確認硬碟分割區狀態 [sudo] password for itachi: Disk /dev/sdb: 2000.4 GB, 2000398934016 bytes 255 heads, 63 sectors/track, 243201 cylinders, total 3907029168 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 4096 bytes Disk identifier: 0x00000000 Disk /dev/sdb doesn&amp;#39;t contain a valid partition table 接著開始分割 進入 fdisk</description></item><item><title>NAS 與 ESXi</title><link>https://cch0124.github.io/project/2018-07-14-nas-esxi/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2018-07-14-nas-esxi/</guid><description>這邊因要將備份的虛擬機放至 NAS，NAS 必須使用掛載方式。
掛載、卸載 NAS 掛載 [root@localhost:/opt/ghettovcb/bin] esxcfg-nas -a -o 192.168.7.11 -s /volume1/ASUS-Server [NAME] Connecting to NAS volume: [NAME] Belstar_KH created and connected. # -a|--add Add a new NAS filesystem to /vmfs volumes. Requires --host and --share options. Use --readonly option only for readonly access. # -o|--host &amp;lt;host&amp;gt; Set the host name or ip address for a NAS mount. For version 4.1, can be a comma-separated list. # -s|--share &amp;lt;share&amp;gt; Set the name of the NAS share on the remote system.</description></item><item><title>rsyslog 應用</title><link>https://cch0124.github.io/project/2018-07-18-rsyslog/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2018-07-18-rsyslog/</guid><description>rsyslog 服務為 Client/Server 服務，可同時實現兩種角色。
它可以作為服務器運行並收集網路中其他設備傳輸的所有日誌。
可以將所有記錄到遠程終端系統 syslog server 的 internal system events 發送到 Client 運行。 environment Ubuntu 14.04 Rsyslog Server Ubuntu 14.04 Client D-link Installation and configuration 預設上，只要安裝好 Ubuntu 都會有 rsyslog
verify dpkg --list 查看已安裝的套件 itachi@ubuntu:~$ dpkg --list | grep rsyslog ii rsyslog 7.4.4-1ubuntu2.6 amd64 reliable system and kernel logging daemon rsyslogd -v 查看版本 itachi@ubuntu:~$ rsyslogd -v rsyslogd 7.</description></item><item><title>DHCP 使用</title><link>https://cch0124.github.io/project/2018-07-06-dhcp/</link><pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2018-07-06-dhcp/</guid><description>Description DHCP (Dynamic Host Configuration Protocol) Client 連上 DHCP Server 後，server 會提供 IP、gateway、DNS server 給 client Clients request 使用 UDP port 68 Server response 使用 UDP port 67 Environment DHCP Server - Ubuntu 14.04
Network - Host-Only 網段 192.168.8.0 DHCP Clients - Ubuntu 14.04（test1） and Ubuntu 14.04（test2）
Netwok - 網卡設定（VMware）成跟 Server 一樣 Installing DHCP in DHCP Server [itachi@ubuntu:~] sudo apt install isc-dhcp-server -y DHCP Server Setting DHCP 接口 [itachi@ubuntu:~] vi /etc/default/isc-dhcp-server INTERFACES=&amp;#34;eth0&amp;#34; # 接口上提供DHCP請求，可以多個。 網路設定 DHCP Server 設定 static Network</description></item><item><title>Apache 使用</title><link>https://cch0124.github.io/project/2018-07-05-apache/</link><pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/project/2018-07-05-apache/</guid><description>env ubuntu 14.04 apache2 PHP 7 Install Apache 套件 itachi@ubuntu:~$ sudo apt install apache2 -y Apache 版本 itachi@ubuntu:~$ apache2 -v Server version: Apache/2.4.7 (Ubuntu) Server built: Sep 18 2017 16:37:54 PHP7.0 套件 apache 為 php7.0 nginx 為 php7.0-fpm itachi@ubuntu:~$ sudo add-apt-repository ppa:ondrej/php #`Debian` 及其衍生產品（如 `Ubuntu`）維護的 `PPA` itachi@ubuntu:~$ sudo apt update itachi@ubuntu:~$ sudo apt install php7.0 -y PHP 版本 php -v itachi@ubuntu:~$ php -v PHP **7.</description></item><item><title>LNMP 與 wordpress</title><link>https://cch0124.github.io/blog/2018-05-28-nginx-php-fpm-mysql/</link><pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-05-28-nginx-php-fpm-mysql/</guid><description>Install And Setting Nginx install 可以透過 apt show 或 apt search 去查詢 nginx 版本
$ sudo apt install nginx -y # 安裝 服務使用
$ sudo systemctl start nginx.service $ sudo systemctl stop nginx.service $ sudo systemctl restart nginx.service $ sudo systemctl status nginx.service Check Nginx Web Service $ ps -aux | grep nginx root 12900 0.0 0.0 124976 1420 ? Ss 21:03 0:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on; www-data 12901 0.</description></item><item><title>mariadb 安裝使用</title><link>https://cch0124.github.io/blog/2018-05-26-mariadb/</link><pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-05-26-mariadb/</guid><description>mariadb install $ sudo apt install mariadb-server -y 設定檔 /etc/mysql log /var/log/mysql
服務使用
$ sudo systemctl start mysql.service $ sudo systemctl stop mysql.service $ sudo systemctl restart mysql.service $ sudo systemctl status mysql.service mariadb connect $ sudo mysql # 預設無密碼登入 Welcome to the MariaDB monitor. Commands end with ; or \g. Your MariaDB connection id is 43 Server version: 10.0.38-MariaDB-0ubuntu0.16.04.1 Ubuntu 16.04 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</description></item><item><title>人所習慣的視覺化</title><link>https://cch0124.github.io/blog/2018-01-24-shell-text-background-color/</link><pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2018-01-24-shell-text-background-color/</guid><description>Visualize 視覺化能夠增強人類感知，將一些資料中的重要資訊用特別的顏色顯示，有助於提供將重要資訊顯示。
生活中日歷上特殊節日也會以紅色顯示，如國歷 10/10 國慶日、農曆 8/15 中秋節等等。
如果再 ubuntu 文字介面下沒有特別突出的顏色應該是不會去特別注意，像是安裝套件有錯誤或警告幾乎以特別的顏色顯示，以吸引或引導的方式幫助我們解決錯誤。
Matching styles to numbers 樣式
0 一般樣式 1 粗體 4 加底線 5 灰底 7 文字及背景顏色對調 文字顏色
30 黑色 31 紅色 32 綠色 33 黃色 34 藍色 35 紫色 36 青綠 37 白色 背景顏色
40 黑色 41 紅色 42 綠色 43 黃色 44 藍色 45 紫色 46 青綠 47 白色 Example #!</description></item><item><title>Iptables</title><link>https://cch0124.github.io/blog/2017-08-14-iptables/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-08-14-iptables/</guid><description>Iptables on ubuntu 查看 iptables 是否安裝
$ whereis iptables iptables: /sbin/iptables /usr/share/iptables /usr/share/man/man8/iptables.8.gz How Linux Firewall Works Iptables firewall 可用於 Linux 內核中用於過濾 packet
Firewall Types Stateless firewall 封包有設定才放行，沒設定就不放行，所以管理者必須要很清楚所有封包往返的流量，他不會紀錄已出去的封包狀態 只能逐一檢視每個封包，但不能進一步分析封包之間的關聯性 Stateful firewall 可以紀錄封包內的資料（例如 SYN 與 ACK 序號），以便分析不同封包之間的關聯性，因此能夠分辨出不同的 session，做出更精確的防範 Netfilter 包含 tables；這些 tables 包含 chains；chains 包含單獨的 rules。
如果傳遞的 packet 與任何 rules 匹配，則將對該 packet 應用規則 action。
action 包含，accept、reject、ignore、pass 將數據包傳遞給其它規則以進行更多處理。
Netfilter 可以使用 IP address 和 port number 處理傳入或傳出流量。</description></item><item><title>File Transfer Protocol(FTP)</title><link>https://cch0124.github.io/blog/2017-04-21-ftp/</link><pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-04-21-ftp/</guid><description>FTP 讓我們透過 Network 在 Server 和 Client 之間傳遞檔案。
FTP 傳輸分兩種模式
port FTP 一般狀態，port 為 21，port 20 為傳輸資料 pasv FTP 屬於被動模式，port 也是 21。連線後使用者會跟 server 端要求資料傳輸的 port 常見 FTP 軟體有 Wuftpd、Proftpd、Vsftpd、Pureftpd 等。因為學校是教學 Vsftpd 所以會以這個為主。
environment ubuntu 16 IP 192.168.137.141 vsftpd tool filezilla（驗證） Install FTP $ sudo apt-get install vsftpd -y service enable $ sudo systemctl start vsftpd # 啟動服務 $ sudo systemctl status vsftpd # 查看服務狀態 $ sudo systemctl stop vsftpd # 停用服務 Configuring FTP 通常服務配置檔都在 /etc 目錄下。利用 whereis 可以查找執行檔和原始檔。</description></item><item><title>LVM（Logical Volume Manager）</title><link>https://cch0124.github.io/blog/2017-04-16-lvm/</link><pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-04-16-lvm/</guid><description>什麼是 LVM 可彈性調整檔案磁區大小 Physical Volume, PV（實體卷宗） Volume Group, VG（卷宗群組） Logical Volume, LV（邏輯卷宗） 非效能取向 寫入方式 線性（預設） A partition 用完時，在使用 B partition 交錯（像 RAID 0） 一份資料用兩顆硬碟來寫入的概念 LVM 可以整合多個實體 partition 在一起， 讓這些 partitions 看起來就像是一個磁碟一樣。還可以在未來新增或移除其他的實體 partition 到這個 LVM 管理的磁碟當中。 by 鳥歌
Physical Volume, PV 利用 fdisk 將劃分的硬碟調整 system ID 為 8e
pvcreate 將實體磁區建立為 PV pvscan 列出系統中 PV 磁區 pvdisplay 顯示系統上 PV 狀態 pvremove 將 PV 屬性移除 Volume Group, VG VG 就是 LVM 組合起來的大磁碟，多個 PV 組合而成。</description></item><item><title>SSH</title><link>https://cch0124.github.io/blog/2017-03-22-ssh/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-03-22-ssh/</guid><description>SSH OpenSSH 是 1999 年基於免費的 SSH 1.2.12 版本開發的開源項目。 OpenSSH 實現的 SSH 功能包括服務端和客戶端，還有私鑰管理等。 SSH protocol 使用加密來保護客戶端和服務器之間的連接。所有用戶身份驗證、命令、輸出和文件傳輸都經過加密，以防止網絡中的攻擊。
配置檔案 /etc/sshd/sshd_config 可做加密選項、身份驗證選項、文件位置、日誌記錄和各種其他參數（port等）
Logging SSH 服務器使用 syslog 系統進行日誌記錄。默認的日誌檔案放置 /var/log/auth.log
基本使用 $ ssh itachi@192.168.222.132 $ ssh -l itachi 192.168.222.132 -p 22 # -l 指定用戶名 # -p 指定 port 第一次登入某個終端時，SSH 客戶端會獲取設備的公鑰及其指紋訊息。
$ ssh -l lab702 192.168.222.132 The authenticity of host '192.168.222.132 (192.168.222.132)' can't be established. ECDSA key fingerprint is SHA256:TmidBei2XVw7f2lqHuSrjfFHsFRz6riglpwY/tKXlXc. Are you sure you want to continue connecting (yes/no)?</description></item><item><title>連續的指令</title><link>https://cch0124.github.io/blog/2017-03-22-multiple-command-/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-03-22-multiple-command-/</guid><description>使用方式 符號 用意 範例 ; 指令一執行完執行指令二 指令一;指令二 &amp;amp;&amp;amp; 指令一正確執行完，才執行指令二 指令一&amp;amp;&amp;amp;指令二 || 指令一如果執行錯誤，則執行指令二 指令一||指令二 指令輸出導向 導向位置 符號 輸入導向 &amp;lt; 輸出導向 &amp;gt;，若 &amp;raquo; 則是追加</description></item><item><title>系統找尋檔案</title><link>https://cch0124.github.io/blog/2017-02-11-file-dir-management/</link><pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-02-11-file-dir-management/</guid><description>找尋檔案方法 find 尋找特定字串檔案或目錄 常與 -exec 執行 locate 搜尋系統中包含字串的檔案 whereis 尋找指定檔案的執行檔、配置檔等 which 尋找指定檔案 搜尋定義在系統環境路徑 $PATH 之下的檔案</description></item><item><title>ln 指令</title><link>https://cch0124.github.io/blog/2016-05-12-ln/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-12-ln/</guid><description>軟連結與硬連結 硬連結都指向同一個檔案；軟連結則否。這在進行刪除有著不同差異前者刪除原檔，連結檔還是會存在者；後者則否。
軟連結 就像是 windows 的捷徑，連結著原檔，修改也是修改原本檔案。
$ ln -s filename [linkname] 硬連結 像是實體連結，不能 link 目錄和跨磁區。
$ ln filename [linkname]</description></item><item><title>permission setting</title><link>https://cch0124.github.io/blog/2016-05-09-permission/</link><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-09-permission/</guid><description>何謂權限 保證該使用者、部門的有效履行。必須具備對某事項進行決策的范圍和程度。不論在哪裡，都會有這種控管，如：學生對老師；老師對主任甚至校長，這過程不是一個人說的算，總不能學生說我要下課，就可以下課。這當然要往上一個層級詢問，直到擁有該權限的人才說的算。這樣子的控管會有一定的保護。
基本權限認知 了解基本權限 三種身分
owner group other 三種權限
read write execute -rw-rw-r-- 1 cch cch 198 Aug 19 17:37 podman.sh # r 讀 # w 寫 # x 執行 # _ 無權限 練習 penguin 來說 fred 帳號可讀寫執行，但對有 group 為 fred 的帳號少了寫的權限，非該帳號和 group 的帳號則只能讀。 redhat 來說 mary 帳號可讀寫，對有 group 為 admin 的帳號只有讀，非該帳號和 group 的帳號則只能讀。 tuxedo 帳號 root 可讀寫，對有 group 為 staff 的帳號只有讀寫，非該帳號和 group 的帳號則只能讀。
變更帳號的擁有者和群組 chown 變更擁有者 chgro 變更群組 權限變更 chmod 權限變更 $ chmod u=rwx,g=rx,o=x filename # u 使用者 # g 群組 # o 其他人 # a 所有 $ chmod 751 filename</description></item><item><title>Ubuntu 上的帳號和群組管理</title><link>https://cch0124.github.io/blog/2016-05-08-account-group-management/</link><pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-08-account-group-management/</guid><description>帳號命名原則 管理者總是讓帳號有一定的統一規則。如：
魯夫就 roof 或 luff 組織單位的分層 itachi_jp 區域分層 zoro_mis 等。 這些都是為了維護和管理阿!!
Account 帳號 在 ubuntu 中，每個使用者都有獨立的 UID（ID Number），系統對帳號的識別以 UID 為準，帳號的名稱僅用在登錄系統上。UID 就像身分證一樣必須唯一（UID 0 以外），有著一對一關係。
UID 為 0 表示為最高權限（root）。 服務帳號會自動建立，UID 通常介於 1~99 手動定義 UID 建議以 1000 開始 # 系統的設定 $ grep UID /etc/login.defs UID_MIN 1000 UID_MAX 60000 #SYS_UID_MIN 100 #SYS_UID_MAX 999 使用者的名稱和 UID 存在 /etc/passwd 使用者會有家目錄 該使用者無適當的權限，則無法讀寫甚至執行檔案 Group 群組 帳號與群組類似，簡稱 GID（Group ID）。
GID 和群組名稱必須唯一（GID 0 例外） GID 儲存在 /etc/passwd 第四欄位；/etc/group 是第三欄位 $ cat /etc/passwd | tail -n 5 cch:x:1000:1000:cch,,,:/home/cch:/bin/bash naruto:x:1001:1001:Test Account:/home/naruto:/bin/bash itahi:x:1002:1002:Test Account:/home/itahi:/bin/bash madara:x:1003:1004::/home/madara:/sbin/nologin brouto:x:1004:1006::/home/brouto:/sbin/nologin $ cat /etc/group | tail -n 5 itahi:x:1002: ftpgroup:x:1003:naruto,madara madara:x:1004: ftpgroup2:x:1005:brouto brouto:x:1006:naruto root 一定是存在系統的，權限為最高的帳號。在 ubuntu 不允許預設 root 登入，須以一般帳號登入再提權。root 的 UID 為 0，帳號 UID 改為 0，則權限與 root 是畫上等號的。</description></item><item><title>Ubuntu 上的 package 管理</title><link>https://cch0124.github.io/blog/2016-04-12-package-management/</link><pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-04-12-package-management/</guid><description>ubuntu package 說明 deb 為 ubuntu/debian 套件檔案的附檔名 類似 redhat/centos 的 rpm 是個包裹檔案，包含著配置檔、執行檔和暫存檔 命名格式 &amp;ldquo;套件名稱_版本_更新次數_適合的硬體平台&amp;rdquo;.deb postfix_2.11.0-1_i386.deb 硬體平台 i386 適合 x86 平台 amd64 適合 64 位元平台 noarch 無任何硬體限制 dpkg 操作 dpkg 為 debian PacKaGe 簡稱，為 debian/ubuntu 主要套件管理指令（安裝、升級、移除）
dpkg -c # 列出套件檔案的內容 dpkg -f # 列出套件的控制訊息 dpkg -l # 列出套件的詳細資訊 dpkg -L # 列出套件所安裝的檔案 dpkg -i # 安裝指定套件 dpkg -r # 移除套件 dpkg -P # 完全移除套件，不保留設定檔 dpkg-reconfigure # 重新設定套件安裝 -a # 重新設定所有使用 debconf 安裝的套件 -u # 預設會在畫面上顯示問題 -force # 強迫重新設定套件 轉換 rpm 與 deb 套件 alien # 轉換 rpm 與 deb 套件 --to-deb（-d） # 產生 debian 套件 --to-rpm（-r） # 產生 rpm 套件 --to-tgz（-t） # 產生 tgz 套件 --test（-T） # 測試 deb 套件 套件安裝</description></item><item><title>TCP wrapper</title><link>https://cch0124.github.io/blog/2016-02-27-tcp-wrapper/</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-02-27-tcp-wrapper/</guid><description>TCP wrapper 簡易 TCP 連線存取限制工具 修改設定檔即時生效，因此不必重啟服務 設定檔 /etc/hosts.allow /etc/hosts.deny 限制多，須檢查服務是否支援 $ ldd /usr/sbin/sshd ... libwrap.so.0 =&amp;gt; /lib/x86_64-linux-gnu/libwrap.so.0 (0x00007fd754b92000) ... $ ldd /usr/sbin/nginx # 無 libwrap 因此不支援 格式
執行檔名:來源位置:規則 Example 讓 sshd 只信任 192.168.221.0 和 192.168.18.0 全網段連線，其餘阻擋
$ vi /etc/hosts.allow ALL:127.0.0.1 [::1] sshd:192.168.221. 192.168.18. $ vi /etc/hosts.deny sshd:ALL</description></item><item><title>sudo and su</title><link>https://cch0124.github.io/blog/2016-02-27-sudo-su/</link><pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-02-27-sudo-su/</guid><description>sudo 與 su sudo 能夠限制指定使用者在指定主機運行某些命令 有 log 紀錄使用者使用 sudo 做哪些事情 /var/log/auth.log 可用時間戳方式給予使用者限定時間內的權限 指令 visudo 設定檔在 /etc/sudoers，建議是不要直接動這個檔案 su 使用者切換 su -，直接升等為 root，並載入相關設定檔，要輸入 root 密碼 su 切換至 root 權限，但不載入配置 使用者提升最高權限 $ visudo &amp;lt;user&amp;gt; ALL=(ALL) NOPASSWORD:ALL</description></item><item><title>使用者操作 - Ubuntu</title><link>https://cch0124.github.io/blog/2015-08-11-account-management/</link><pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2015-08-11-account-management/</guid><description>useradd 選項 參數 說明 -c 註解 指定帳號的註解文字 -g 主要群組名稱或 GID 指定帳號的主要群組 -G 附加群組名稱或 GID 指定帳號所屬的附加群組 -d 目錄 指定家目錄 -e 日期 指定新建帳號的使用到期日，過期該帳號無法使用 -u UID 指定帳號的 UID 編號 新增使用者 # useradd testuser # id testuser # id 列出使用者資訊 uid=1002(testuser) gid=1003(testuser) groups=1003(testuser) 指定群組 # useradd -g rd eric # -g 指定群組 # id eric uid=1003(eric) gid=1001(rd) groups=1001(rd) 移除使用者 # userdel USER #無法刪除該使用者家目錄 # userdel -r USER #刪除使用者和家目錄 usermod 選項 參數 說明 -c 註解 改變帳號的註解文字 -g 主要群組名稱或 GID 改變帳號的主要群組 -G 附加群組名稱或 GID 改變或增加帳號所屬的附加群組 -d 目錄 改變家目錄 -e 日期 變更帳號的使用到期日，過期該帳號無法使用 -u UID 變更帳號的 UID 編號 -l 帳號名稱 變更原帳號的名稱 修改使用者帳號 # id tom uid=1004(tom) gid=1001(rd) groups=1001(rd),1004(manager) # usermod -G manager,sales tom # usermod 修改使用者帳號， -G 加入附屬群組(已存在的帳號) # id tom uid=1004(tom) gid=1001(rd) groups=1001(rd),1004(manager),1005(sales)</description></item></channel></rss>