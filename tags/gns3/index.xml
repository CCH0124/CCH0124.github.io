<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GNS3 on</title><link>https://cch0124.github.io/tags/gns3/</link><description>Recent content in GNS3 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://cch0124.github.io/tags/gns3/index.xml" rel="self" type="application/rss+xml"/><item><title>router-on-a-stick</title><link>https://cch0124.github.io/blog/2020-01-05-router-on-a-stick/</link><pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2020-01-05-router-on-a-stick/</guid><description>環境 這邊配置一台 L3 交換器、路由器、VM 和 PC。這一次實驗主要是實現單臂路由(router-on-a-stick)，單臂路由簡單來說是用來實現不同 VLAN 間的通訊，其接口需配置 trunk 協定，在藉由一個接口建立每個 VLAN 的網路 gateway。當 VLAN 有設置後，其每個封包都會帶著 VLAN 標籤，而這個標籤會在設定單臂路由的路由器進行解析，這樣就能讓不同 VLAN 可以相互通訊。至於 VLAN 相關操作和原理可查看之前寫的內容。
配置 ESW1 交換器與 R1 路由器 將接口啟動，並使用 hostname 配置 ESW1 的主機名稱。
ESW1#conf t ESW1(config)#hostname IT@L3 % Hostname contains one or more illegal characters. % Hostname &amp;#34;IT@L3&amp;#34; is not a legal LAT node name, Using &amp;#34;CISCO_18F100&amp;#34; IT@L3(config)#interface fastEthernet 1/0 IT@L3(config-if)#no shutdown IT@L3(config-if)#interface fastEthernet 1/15 IT@L3(config-if)#no shutdown IT@L3(config-if)#exit 配置 telnet 相關配置以及交換機上安全設定，有關 telnet 配置可參考之前文章所做的實驗。</description></item><item><title>VLAN 介紹</title><link>https://cch0124.github.io/blog/2019-11-10-vlan/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-11-10-vlan/</guid><description>VLAN(Virtual LAN) 是交換器上一個很重要的技術，它可以去規劃一個區域網路內的組織，也就是可將不同類型的部門網路進行邏輯上的網路切分。VLAN 的技術可將一台交換器上的埠分成幾個群，而每個群又可透過 VLAN 特性再做一些詳細設定，VLAN 邏輯上根據切分的群就有幾個廣播網域(Broadcast Domain)，所以這也讓不同的 VLAN 再域設下不能直接相互通訊。透過 VLAN 技術切分的廣播網域相比原本同一 LAN 下的廣播域對網路負擔要來的小。
VLAN 資料轉發 在多個交換器之間設定的 VLAN，則域設下只有同一 VLAN 才能通訊。在預設下交換器都屬於同一 VLAN 中，因此針對於接收到的封包對所有埠做 flooding 動作是對的，因此做了 VLAN 後，VLAN 間傳遞封包只會在該 VLAN 中進行 flooding。另外一個重點是 trunk，它用來對跨越多個交換器的 VLAN 進行轉發，要設置 trunk 則接口需要是 FastEthernet 以上才可設定。
trunk 資料轉發 trunk 會在封包內增加一個標籤，用來指名這封包是屬於哪個 VLAN，而這標邊被新增後將傳往下個設備。下個設備收到之後，再根據標籤來得知此封包是屬於哪個 VLAN，然後再轉發至所屬的 VLAN。
這邊將透過下面架構進行 VLAN 操作，這邊大致上會以 ESW1 做設定，ESW2 則是對應這邊不再多做說明與設置。
查看 ESW1 交換器 VLAN 訊息，發現所有接口預設都是 VLAN 1，在這種情況下我們的路由器 R1 至 R6 都能相互通訊。
ESW1#show vlan-switch VLAN Name Status Ports ---- -------------------------------- --------- ------------------------------- 1 default active Fa1/0, Fa1/1, Fa1/2, Fa1/3 Fa1/4, Fa1/5, Fa1/6, Fa1/7 Fa1/8, Fa1/9, Fa1/10, Fa1/11 Fa1/12, Fa1/13, Fa1/14, Fa1/15 1002 fddi-default active 1003 token-ring-default active 1004 fddinet-default active 1005 trnet-default active VLAN Type SAID MTU Parent RingNo BridgeNo Stp BrdgMode Trans1 Trans2 ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------ 1 enet 100001 1500 - - - - - 1002 1003 1002 fddi 101002 1500 - - - - - 1 1003 1003 tr 101003 1500 1005 0 - - srb 1 1002 1004 fdnet 101004 1500 - - 1 ibm - 0 0 1005 trnet 101005 1500 - - 1 ibm - 0 0 接著我們配置 VLAN 觀察，R1 和 R4 我們讓它預設；R2 和 R5 設至為 VLAN 20；R3 和 R6 為 VLAN 30。</description></item><item><title>SSH</title><link>https://cch0124.github.io/blog/2019-11-15-cisco-ssh/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-11-15-cisco-ssh/</guid><description>拓樸 官網說明，啟用 SSH 需要四個步驟：
配置 hostname 配置 DNS domain 產生要使用的 SSH key vty 啟用 SSH transport 表明支援 SSH 與 telnet 比較之下，重點在於 SSH 有加密的機制，因此在傳遞資訊方面較為安全。
R1 設定 介面卡設定 R1#configure terminal Enter configuration commands, one per line. End with CNTL/Z. R1(config)#interface fastEthernet 0/0 R1(config-if)#ip address 192.168.6.200 255.255.255.0 R1(config-if)#no shutdown *Mar 1 00:03:03.563: %LINK-3-UPDOWN: Interface FastEthernet0/0, changed state to up *Mar 1 00:03:04.563: %LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up SSH 設定 R1(config)#ip domain-name itachi.</description></item><item><title>cisco telnet</title><link>https://cch0124.github.io/blog/2019-11-06-cisco-telnet/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-11-06-cisco-telnet/</guid><description>拓樸 本實驗將 ubuntu16 與 VMware 的虛擬機做鏈接，因此 R1 和 ubuntu16 為同一個網段。本實驗練習設定以及用 wireshark 觀察 telnet。
遠端設備 原則上有以下方式可以連接設備
Console Terminal Remote Terminal Telnet SSH R1 設定 IP 配置 R1(config)#interface fastEthernet 0/0 R1(config-if)#ip address 192.168.6.200 255.255.255.0 R1(config-if)#no shutdown 啟用遠端 line vty 用來設定 0 到 4 的介面，藉由 login 設定登入時輸入帳號與密碼。要取消 telnet 使用 no login local 指令。
R1(config)#line vty 0 4 R1(config-line)#login R1(config-line)#exit R1(config)#username cisco7200 privilege 15 password cisco7200 R1(config)#exit R1#wr Building configuration... [OK] login 和 login local 在認證方面有些許差異。</description></item><item><title>負載均衡</title><link>https://cch0124.github.io/blog/2019-04-06-hsrp/</link><pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-04-06-hsrp/</guid><description>HSRP Introduction HSRP 是提供 first-hop 來提供高網路可用性的標準方法。它使一組路由器接口能夠協同工作，向 LAN 上的主機呈現單個虛擬路由或 default gateway 的方法。在網路的多個路由器上配置 HSRP 時，它會提供虛擬媒體訪問控制（MAC,virtual Media Access Control）位址和一組已配置的路由器之間共享的 IP 地址。
當其中一個路由器被選擇為 active 路由器，另一個路由器作為 standby 路由器。在一組設有 HSRP 路由器接口中，active 路由器是路由封包的首選路由器；standby 路由器是在 active 路由器出現故障或滿足預設條件時接管路由任務的路由器。
HSRP 支持的任何路由器接口
Implement HSRP Topology 這邊 Cloud1 是透過虛擬機網路卡取得 IP，這邊不詳述。
目標 配置 EIGRP 設定 HSRP 測試 EIGRP Configuration 我將 R1、R2、R3、R4 配置 EIGRP 協定並將 AS 設定為 100。 這邊用 R1、R2 做範例，其中會在 EIGRP 中加入預設路由。
R1 router eigrp 100 network 172.16.1.0 0.0.0.3 redistribute static metric 100000 1000 255 1 1500 R2 router eigrp 100 network 10.</description></item><item><title>RIP 與子網路切割</title><link>https://cch0124.github.io/blog/2019-01-05-rip/</link><pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-01-05-rip/</guid><description>拓樸 學習目標 切割子網路 設定 RIP 協定 ping 和 traceroute 驗證 封包驗證 拓樸子網路分配取切割 定義了 192.168.1.0/24 是給一間學校的網段。其中 R1、R2、R3 是學校三棟大樓的核心。 R1 假設為一年級電腦教室，在介面 e5/0 下給了 40 個主機給一年級使用；R2 假設為二、三年級電腦教室，在介面 e5/0 給了 80 個主機給二年級電腦教室使用；R3 假設為四年級電腦教室，在介面 e5/0 給了 20 個主機給二年級電腦教室使用。但是要如何有效切割子網路才能達到節省 IP 的目標 ? 「必須利用無類別區隔路由（CIDR）技巧來達到節省 IP」。
IP 為 32 bit 組成，IP 位址以 Classful 分類為 A、B、C、D、E 五類。是以 32 bit 以每 8 bit 一組來區隔做不同的類別，如下表。
網路類別 IP 位置範圍 Class A 0.0.0.0 ~ 127.</description></item><item><title>Static routes</title><link>https://cch0124.github.io/blog/2017-11-24-static-route/</link><pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-11-24-static-route/</guid><description>Routing table 路由器是一個負責將封包送往目的地的設備，而路由器跟路由器之間必須要分享所學習到的資訊，並且把交換的資訊以到鄰居的成本以和使用什麼路由協定等給記錄至一張表格，而這張表格就是 Routing table。
此篇文章範圍是 Static Route 的概念。
The router decides how to send the packet Static Route 手動輸入 網路有變化，需要人員的管理 無須學習 因此速度快 Dynamic Route 做 Routing Protocol 的設定 耗資源 由 router 之間去做協調 網路有變化，會透過 Routing Protocol 學習 Default route （預設路由）所謂的預設路由就是當不知道要將這個封包送往哪裡的時候，就會採用這個預設路由所指定的路徑。
Example 這邊不描述 IP address 的設定。
目標：
設置 R1 Static Route。 R2 和 R3 都各有一條 Default route。 Set R2 &amp;amp; R3 Default route R2 將來自不存在於路由表的目的地給丟置 10.</description></item><item><title>DHCP</title><link>https://cch0124.github.io/blog/2017-11-11-dhcp/</link><pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-11-11-dhcp/</guid><description>DHCP DHCP（Dynamic Host Configuration Protocol），屬於第七層的 Application Layer。DHCP 此協定運作於 Server-Client 的架構之中，來讓 Client 端取得網路相關的設定，包含 IP Address、Default Route、DNS。Client 端指的是一般電腦設備，而 Server 端就是DHCP Server。
優點 有效節省 IP 減少維護者負擔 容易維護 DHCP 的 port DHCP Server UDP 67 Client UDP 68 DHCP 分配（Allocate）IP 位址方式 動態分配方式 DHCP Server 上設定好一個 IP Address 範圍以及使用期限，以便回收 IP Address，以便給其它 Client。 靜態分配方式 DHCP Server 根據已定義並手動寫入對應表的 MAC 位址與 IP 位址來分配。 自動分配方式 DHCP Server 可以針對事先已經定義好的 IP Address 範圍來分配 IP Address 給 Client 端，IPAddress 的使用是沒有期限，相對的DHCP Server 會記錄 Client 端使用的 IP Address，以避免 IP Address 衝突。 Client 取得 DHCP 設定過程 Discovery（Client端→DHCP Server） Client 端以 Broadcast 找尋 DHCP Server。設定 DHCP Relay Agent，以達到跨網路尋求的步驟。</description></item><item><title>PPP</title><link>https://cch0124.github.io/blog/2017-11-04-ppp/</link><pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-11-04-ppp/</guid><description>PPP 廣域網路協定 廣域網路 廣域網路（Wide Area Network，WAN ）和一般所謂的區域網路不一樣。區域網路通常是指範圍較小的網路區段，可能是同一棟大樓、同一層樓或是一個區域較小的地理位置。 而廣域網路是範圍比較廣的網路區段，一般跨國型的企業都會使用廣域網路來連結位於不同國家的各個分部，好讓資訊能夠相互流通。
PPP 協定 PPP（Point to Point Protocol）協定是普遍被使用的廣域網路協定，如同名稱所示，PPP 協定是指點對點的網路協定，通常用於兩個網路節點的直接連接，例如兩台電腦透過電話線的網路連接，經常使用在寬頻網路連線上。目前許多ADSL 網路服務供應商（ISP ）提供使用者以 PPP 協定的方式撥接到本身的機房，然後再連上網際網路。以往，則大多使用 SLIP（Serial Line Internet Protocol ）協定，該協定採用的是TCP/IP 協定的點對點串列連線的標準。SLIP 協定是很久以前的協定，主要用於串列埠與數據機之間的連線，現在慢慢地已經被 PPP 協定取代。
PPP 協定在廣域網路連線上的定位 PPP 協定算是廣域網路在網路協定第二層封裝協定的種類之一，當網路封包要傳送到廣域網路之前，在網路第二層協定時，就一定會先透過特定的方式進行封裝，而為了保證能使用正確的封裝方式，在設定 Cisco 設備來支援廣域網路時就必須選對正確的封裝協定，而封裝協定的選擇與所使用的廣域網路技術和廣域網路設備有關。 因此，網路管理人員一定要瞭解廣域網路所使用的封裝協定，才能夠正確的選擇並且設定第二層封裝協定。
一般廣域網路的網路協定第二層封裝協定有以下幾個種類：
HDLC PPP SLIP X.25 LAPB 幀中繼（Frame Relay ） ATM 所以 PPP 協定正是其中一種。
PPP RFC 中定義資訊 PPP 協定包含了各種認證方式、加密與解密方式、壓縮資料方式以及 PPP 協定如何與其他網路協定的合作與交互關係。
PPP 協定中的CHAP 協定，也就是握手（Handshake ）協定，用於建立撥號連接。
PPPoE 協定在乙太網路中用於傳輸PPP 協定中的資料，經常使用於ADSL 上。
PPPoA 協定，主要應用在以ATM 網路卡來傳輸PPP 協定的資料。由於PPPoA 使用於ATM 網路，所以也稱為PPPoATM。</description></item><item><title>ARP Protocol</title><link>https://cch0124.github.io/blog/2016-10-02-arp/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-10-02-arp/</guid><description>ARP 從本地端電腦傳送封包到你瀏覽的網頁，他會利用 IP Address 把封包傳送至目的地。但，這之間會學習到目的地 Host 的 MAC Address（Media Access Control Address），這樣才能達到準確溝通。在 Ethernet（乙太網路）環境下，Ethernet進行了連線、傳遞訊號等。要用 IP Address 找出 MAC 得要用 ARP（Address Resolution Protocol） ，ARP 屬於 OSI Model 網路層。
ARP 學習 當 R1 想找 PC1，但 R1 什麼都不知道，只認識自己。R1 發送 broadcast 發出一個 ARP Request，ARP Request 包含了PC1 的 IP Address 等，到了 Switch1 進行 flooding 使每個目的端 Host 都接收（因為是 broadcast）。接著，目的端都接收，會進行 ARP reply 的動作，只有符合 R1 要找的 IP 才會進行回覆以 unicast 方式，其餘的 Host 會把此 frame Drop 掉，之後 R1 會把找到的 Host MAC 給記錄到 ARP 表格。</description></item><item><title>NAT</title><link>https://cch0124.github.io/blog/2019-10-12-nat-dynamic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-10-12-nat-dynamic/</guid><description>什麼是 NAT 因為 IPv4 的地址將用盡，如果沒有 NAT 技術的話將導致某一些人無法存取網路。在 ISP 提供的 IP 可分為，動態 IP 與靜態 IP。動態 IP 可以想成從 ISP 那邊自動獲取 IP 類似於 DHCP；靜態 IP 就是給一個 Global IP 位置且它是收費的。隨著物聯網裝置的需求想必 IPv4 是不夠用，因此就有 NAT 去提升效率，藉由一個 Global IP 來對其下的組織或客戶端實現 NAT 並存取網際網路。
NAT 通常會配置兩個網路，該 NAT 可以隱藏內部訊息，其流程大致上是把私有 IP 轉換為 Global IP，在將其封包轉發至目的地，這樣也就提供對內的安全性。
NAT 可以幫忙解決 IPv4 不足問題也可以有隱藏 IP 功能提高安全性。但它也會有一些缺點，像是要保留傳入與傳出的 IPv4 這將對記憶體或 CPU 帶來負擔，因為多了 NAT 轉換想必延遲一定會有，除此之外它變得不可追溯，因此在做除錯時會帶來麻煩。
環境設置 下圖為實驗環境，兩台客戶端和一台可通往 Cloud1 的 ISP。
兩台客戶端使用 Vmware 虛擬機網路都為同一個 host only，接著用 netplan 配置虛擬機 IP 和 gateway，這 gateway 將會是 R1 的 f0/0 接口的 IP，這邊有 netplan 教學鏈結。圖中的 Cloud1 使用 Vmware 提供的可上網的網路適配器，記住上圖的 IP 設置應當依照實驗環境而設置。</description></item><item><title>Static NAT</title><link>https://cch0124.github.io/blog/2019-10-13-static-nat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-10-13-static-nat/</guid><description>環境 配置一台 host only 的虛擬機和一台 R1 路由器以及可以連至網際網路的 Cloud1。該 Cloud1 使用的是手機 USB 出來的網路適配器。
配置 R1 配置 f0/0 的 IP，對於這個 f0/0 來說它是虛擬機的 gateway，只要封包不知道要往哪邊走都會網 f0/0 丟。
R1(config)#interface fastEthernet 0/0 R1(config-if)#ip address 192.168.245.254 255.255.255.0 R1(config-if)#no shutdown 配置 R1 的 Outside 接口，使用 DHCP 方式向 Cloud1 請求 IP。
R1(config)#interface fastEthernet 1/0 R1(config-if)#no shutdown R1(config-if)#ip address dhcp 確認有無配置到 IP。
R1(config-if)#do sh ip int brief Interface IP-Address OK? Method Status Protocol FastEthernet0/0 192.168.245.254 YES manual up up FastEthernet1/0 192.</description></item></channel></rss>