<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>flutter on</title><link>https://cch0124.github.io/tags/flutter/</link><description>Recent content in flutter on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://cch0124.github.io/tags/flutter/index.xml" rel="self" type="application/rss+xml"/><item><title>navigation drawer</title><link>https://cch0124.github.io/blog/2019-11-08-listview-listtitle/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-11-08-listview-listtitle/</guid><description>目標 實現抽屜樣式的下拉式選單，或許 row 和 column 也能夠實現，但是會比較麻煩。這次實現步驟是透過 ListTile 和 ListView 實現。
ListTle 和 ListView ListTile 官方說 A single fixed-height row that typically contains some text as well as a leading or trailing icon. 是一個高度固定，但單一個列，通常包含一些文字和前導或尾隨的圖示。
原始碼
class ListTile extends StatelessWidget { /// Creates a list tile. /// /// If [isThreeLine] is true, then [subtitle] must not be null. /// /// Requires one of its ancestors to be a [Material] widget.</description></item><item><title>底部滑動按鈕</title><link>https://cch0124.github.io/blog/2019-09-23-flutter-bottom/</link><pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-09-23-flutter-bottom/</guid><description>想法 使用 button 用 row 集成 button 為同一列 SingleChildScrollView 滑動 EdgeInsets 設定 button 之間距離 用 container 包住元件 程式碼 import &amp;#39;package:flutter/material.dart&amp;#39;; import &amp;#39;package:flutter/painting.dart&amp;#39;; import &amp;#39;package:flutter/widgets.dart&amp;#39;; /** * 定義資料結構，button 要有名稱和動作 */ class BottomButtonModel { String title; String routeName; BottomButtonModel(String title, String routeName) { this.title = title; this.routeName = routeName; } } List&amp;lt;BottomButtonModel&amp;gt; bottomButtonItems = [ BottomButtonModel(&amp;#34;F1&amp;#34;, &amp;#34;F1&amp;#34;), BottomButtonModel(&amp;#34;F2&amp;#34;, &amp;#34;F2&amp;#34;), BottomButtonModel(&amp;#34;F3&amp;#34;, &amp;#34;F3&amp;#34;), BottomButtonModel(&amp;#34;F4&amp;#34;, &amp;#34;F4&amp;#34;), BottomButtonModel(&amp;#34;F5&amp;#34;, &amp;#34;F5&amp;#34;), BottomButtonModel(&amp;#34;F6&amp;#34;, &amp;#34;F6&amp;#34;), BottomButtonModel(&amp;#34;F7&amp;#34;, &amp;#34;F7&amp;#34;), BottomButtonModel(&amp;#34;F8&amp;#34;, &amp;#34;F8&amp;#34;), BottomButtonModel(&amp;#34;F9&amp;#34;, &amp;#34;F9&amp;#34;), BottomButtonModel(&amp;#34;F0&amp;#34;, &amp;#34;F0&amp;#34;), BottomButtonModel(&amp;#34;F.</description></item><item><title>資料表實現</title><link>https://cch0124.github.io/blog/2019-09-28-flutter-data-table/</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-09-28-flutter-data-table/</guid><description>目標 頁面顯示資料表使用 DataTable 配合 scroll 使資料表能夠上下左右滑動 以下會先以描述 DataTable Widget 在描述實作過程。
what is DataTable DataTable 可實現數據的操作（排序、選擇等）和顯示。但這篇文章只有說明到顯示部分。但此 DataTable 並無做到表頭的固定，覺得可惜。少了表頭固定當滑動資料表時會無法對應該欄位是在針對什麼描述。
要組成一個 DataTable 可需要 DataColumn、DataRow 和 DataCell 組件做配置。
而在 DataTable 原始碼 中，可以知道他可以針對表頭高度、欄位間格等做設定。在原始碼中已給預設值，但可依照環境要求進行設定。
DataTable({ Key key, @required this.columns, this.sortColumnIndex, this.sortAscending = true, this.onSelectAll, this.dataRowHeight = kMinInteractiveDimension, this.headingRowHeight = 56.0, this.horizontalMargin = 24.0, this.columnSpacing = 56.0, @required this.rows, }) : assert(columns != null), assert(columns.isNotEmpty), assert(sortColumnIndex == null || (sortColumnIndex &amp;gt;= 0 &amp;amp;&amp;amp; sortColumnIndex &amp;lt; columns.</description></item><item><title>flutter Button route 應用</title><link>https://cch0124.github.io/blog/2019-08-12-flutter-button-route/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2019-08-12-flutter-button-route/</guid><description>目標 在手機底部做一個能夠左右滑動的多個按鈕集合。希望按下第一個按鈕能切換至他的頁面；第二個按鈕能切換至他的頁面以此類推
flutter 路由方式 Route route 是應用程式的螢幕或頁面的抽象，Navigator 是管理 route 的 widget Navigator 建立維護由 stack 的歷史記錄的 Widget。Navigator 可以 push 和 pop 出 route，幫助使用者從一個螢幕畫面移動到另一個屏幕畫面 Material Page Route 一種樣式 route，用 platform-adaptive transition 替換整個螢幕畫面 什麼是 platform-adaptive transition？ 從一個螢幕畫面路由到其他螢幕換面時看到的轉換。
Android 頁面的入口轉換將頁面向上滑動並淡入。退出的轉換是相同的，但滑動是相反 iOS 頁面從右側滑入並反向退出。當另一頁進入以覆蓋它時，頁面也會在視覺中向左移動 此轉換僅因 MaterialPageRoute 而發生。要修改此轉換動畫，需使用 MaterialPageRoute 或 PageRouteBuilder
flutter Code import &amp;#39;package:flutter/material.dart&amp;#39;; import &amp;#39;package:flutter/painting.dart&amp;#39;; import &amp;#39;package:flutter/widgets.dart&amp;#39;; /** * 定義一個按鈕的結構 * title 該按鈕名稱 * routeName 該按鈕路由名稱 */ class BottomButtonModel { String title; String routeName; /// 建構方法(Constructor) BottomButtonModel(String title, String routeName) { this.</description></item></channel></rss>