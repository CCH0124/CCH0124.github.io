<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubuntu on</title><link>https://cch0124.github.io/categories/ubuntu/</link><description>Recent content in Ubuntu on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Aug 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://cch0124.github.io/categories/ubuntu/index.xml" rel="self" type="application/rss+xml"/><item><title>Iptables</title><link>https://cch0124.github.io/blog/2017-08-14-iptables/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-08-14-iptables/</guid><description>Iptables on ubuntu 查看 iptables 是否安裝
$ whereis iptables iptables: /sbin/iptables /usr/share/iptables /usr/share/man/man8/iptables.8.gz How Linux Firewall Works Iptables firewall 可用於 Linux 內核中用於過濾 packet
Firewall Types Stateless firewall 封包有設定才放行，沒設定就不放行，所以管理者必須要很清楚所有封包往返的流量，他不會紀錄已出去的封包狀態 只能逐一檢視每個封包，但不能進一步分析封包之間的關聯性 Stateful firewall 可以紀錄封包內的資料（例如 SYN 與 ACK 序號），以便分析不同封包之間的關聯性，因此能夠分辨出不同的 session，做出更精確的防範 Netfilter 包含 tables；這些 tables 包含 chains；chains 包含單獨的 rules。
如果傳遞的 packet 與任何 rules 匹配，則將對該 packet 應用規則 action。
action 包含，accept、reject、ignore、pass 將數據包傳遞給其它規則以進行更多處理。
Netfilter 可以使用 IP address 和 port number 處理傳入或傳出流量。</description></item><item><title>File Transfer Protocol(FTP)</title><link>https://cch0124.github.io/blog/2017-04-21-ftp/</link><pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-04-21-ftp/</guid><description>FTP 讓我們透過 Network 在 Server 和 Client 之間傳遞檔案。
FTP 傳輸分兩種模式
port FTP 一般狀態，port 為 21，port 20 為傳輸資料 pasv FTP 屬於被動模式，port 也是 21。連線後使用者會跟 server 端要求資料傳輸的 port 常見 FTP 軟體有 Wuftpd、Proftpd、Vsftpd、Pureftpd 等。因為學校是教學 Vsftpd 所以會以這個為主。
environment ubuntu 16 IP 192.168.137.141 vsftpd tool filezilla（驗證） Install FTP $ sudo apt-get install vsftpd -y service enable $ sudo systemctl start vsftpd # 啟動服務 $ sudo systemctl status vsftpd # 查看服務狀態 $ sudo systemctl stop vsftpd # 停用服務 Configuring FTP 通常服務配置檔都在 /etc 目錄下。利用 whereis 可以查找執行檔和原始檔。</description></item><item><title>LVM（Logical Volume Manager）</title><link>https://cch0124.github.io/blog/2017-04-16-lvm/</link><pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-04-16-lvm/</guid><description>什麼是 LVM 可彈性調整檔案磁區大小 Physical Volume, PV（實體卷宗） Volume Group, VG（卷宗群組） Logical Volume, LV（邏輯卷宗） 非效能取向 寫入方式 線性（預設） A partition 用完時，在使用 B partition 交錯（像 RAID 0） 一份資料用兩顆硬碟來寫入的概念 LVM 可以整合多個實體 partition 在一起， 讓這些 partitions 看起來就像是一個磁碟一樣。還可以在未來新增或移除其他的實體 partition 到這個 LVM 管理的磁碟當中。 by 鳥歌
Physical Volume, PV 利用 fdisk 將劃分的硬碟調整 system ID 為 8e
pvcreate 將實體磁區建立為 PV pvscan 列出系統中 PV 磁區 pvdisplay 顯示系統上 PV 狀態 pvremove 將 PV 屬性移除 Volume Group, VG VG 就是 LVM 組合起來的大磁碟，多個 PV 組合而成。</description></item><item><title>SSH</title><link>https://cch0124.github.io/blog/2017-03-22-ssh/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-03-22-ssh/</guid><description>SSH OpenSSH 是 1999 年基於免費的 SSH 1.2.12 版本開發的開源項目。 OpenSSH 實現的 SSH 功能包括服務端和客戶端，還有私鑰管理等。 SSH protocol 使用加密來保護客戶端和服務器之間的連接。所有用戶身份驗證、命令、輸出和文件傳輸都經過加密，以防止網絡中的攻擊。
配置檔案 /etc/sshd/sshd_config 可做加密選項、身份驗證選項、文件位置、日誌記錄和各種其他參數（port等）
Logging SSH 服務器使用 syslog 系統進行日誌記錄。默認的日誌檔案放置 /var/log/auth.log
基本使用 $ ssh itachi@192.168.222.132 $ ssh -l itachi 192.168.222.132 -p 22 # -l 指定用戶名 # -p 指定 port 第一次登入某個終端時，SSH 客戶端會獲取設備的公鑰及其指紋訊息。
$ ssh -l lab702 192.168.222.132 The authenticity of host '192.168.222.132 (192.168.222.132)' can't be established. ECDSA key fingerprint is SHA256:TmidBei2XVw7f2lqHuSrjfFHsFRz6riglpwY/tKXlXc. Are you sure you want to continue connecting (yes/no)?</description></item><item><title>連續的指令</title><link>https://cch0124.github.io/blog/2017-03-22-multiple-command-/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-03-22-multiple-command-/</guid><description>使用方式 符號 用意 範例 ; 指令一執行完執行指令二 指令一;指令二 &amp;amp;&amp;amp; 指令一正確執行完，才執行指令二 指令一&amp;amp;&amp;amp;指令二 || 指令一如果執行錯誤，則執行指令二 指令一||指令二 指令輸出導向 導向位置 符號 輸入導向 &amp;lt; 輸出導向 &amp;gt;，若 &amp;raquo; 則是追加</description></item><item><title>系統找尋檔案</title><link>https://cch0124.github.io/blog/2017-02-11-file-dir-management/</link><pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2017-02-11-file-dir-management/</guid><description>找尋檔案方法 find 尋找特定字串檔案或目錄 常與 -exec 執行 locate 搜尋系統中包含字串的檔案 whereis 尋找指定檔案的執行檔、配置檔等 which 尋找指定檔案 搜尋定義在系統環境路徑 $PATH 之下的檔案</description></item><item><title>ln 指令</title><link>https://cch0124.github.io/blog/2016-05-12-ln/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-12-ln/</guid><description>軟連結與硬連結 硬連結都指向同一個檔案；軟連結則否。這在進行刪除有著不同差異前者刪除原檔，連結檔還是會存在者；後者則否。
軟連結 就像是 windows 的捷徑，連結著原檔，修改也是修改原本檔案。
$ ln -s filename [linkname] 硬連結 像是實體連結，不能 link 目錄和跨磁區。
$ ln filename [linkname]</description></item><item><title>permission setting</title><link>https://cch0124.github.io/blog/2016-05-09-permission/</link><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-09-permission/</guid><description>何謂權限 保證該使用者、部門的有效履行。必須具備對某事項進行決策的范圍和程度。不論在哪裡，都會有這種控管，如：學生對老師；老師對主任甚至校長，這過程不是一個人說的算，總不能學生說我要下課，就可以下課。這當然要往上一個層級詢問，直到擁有該權限的人才說的算。這樣子的控管會有一定的保護。
基本權限認知 了解基本權限 三種身分
owner group other 三種權限
read write execute -rw-rw-r-- 1 cch cch 198 Aug 19 17:37 podman.sh # r 讀 # w 寫 # x 執行 # _ 無權限 練習 penguin 來說 fred 帳號可讀寫執行，但對有 group 為 fred 的帳號少了寫的權限，非該帳號和 group 的帳號則只能讀。 redhat 來說 mary 帳號可讀寫，對有 group 為 admin 的帳號只有讀，非該帳號和 group 的帳號則只能讀。 tuxedo 帳號 root 可讀寫，對有 group 為 staff 的帳號只有讀寫，非該帳號和 group 的帳號則只能讀。
變更帳號的擁有者和群組 chown 變更擁有者 chgro 變更群組 權限變更 chmod 權限變更 $ chmod u=rwx,g=rx,o=x filename # u 使用者 # g 群組 # o 其他人 # a 所有 $ chmod 751 filename</description></item><item><title>Ubuntu 上的帳號和群組管理</title><link>https://cch0124.github.io/blog/2016-05-08-account-group-management/</link><pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-05-08-account-group-management/</guid><description>帳號命名原則 管理者總是讓帳號有一定的統一規則。如：
魯夫就 roof 或 luff 組織單位的分層 itachi_jp 區域分層 zoro_mis 等。 這些都是為了維護和管理阿!!
Account 帳號 在 ubuntu 中，每個使用者都有獨立的 UID（ID Number），系統對帳號的識別以 UID 為準，帳號的名稱僅用在登錄系統上。UID 就像身分證一樣必須唯一（UID 0 以外），有著一對一關係。
UID 為 0 表示為最高權限（root）。 服務帳號會自動建立，UID 通常介於 1~99 手動定義 UID 建議以 1000 開始 # 系統的設定 $ grep UID /etc/login.defs UID_MIN 1000 UID_MAX 60000 #SYS_UID_MIN 100 #SYS_UID_MAX 999 使用者的名稱和 UID 存在 /etc/passwd 使用者會有家目錄 該使用者無適當的權限，則無法讀寫甚至執行檔案 Group 群組 帳號與群組類似，簡稱 GID（Group ID）。
GID 和群組名稱必須唯一（GID 0 例外） GID 儲存在 /etc/passwd 第四欄位；/etc/group 是第三欄位 $ cat /etc/passwd | tail -n 5 cch:x:1000:1000:cch,,,:/home/cch:/bin/bash naruto:x:1001:1001:Test Account:/home/naruto:/bin/bash itahi:x:1002:1002:Test Account:/home/itahi:/bin/bash madara:x:1003:1004::/home/madara:/sbin/nologin brouto:x:1004:1006::/home/brouto:/sbin/nologin $ cat /etc/group | tail -n 5 itahi:x:1002: ftpgroup:x:1003:naruto,madara madara:x:1004: ftpgroup2:x:1005:brouto brouto:x:1006:naruto root 一定是存在系統的，權限為最高的帳號。在 ubuntu 不允許預設 root 登入，須以一般帳號登入再提權。root 的 UID 為 0，帳號 UID 改為 0，則權限與 root 是畫上等號的。</description></item><item><title>Ubuntu 上的 package 管理</title><link>https://cch0124.github.io/blog/2016-04-12-package-management/</link><pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-04-12-package-management/</guid><description>ubuntu package 說明 deb 為 ubuntu/debian 套件檔案的附檔名 類似 redhat/centos 的 rpm 是個包裹檔案，包含著配置檔、執行檔和暫存檔 命名格式 &amp;ldquo;套件名稱_版本_更新次數_適合的硬體平台&amp;rdquo;.deb postfix_2.11.0-1_i386.deb 硬體平台 i386 適合 x86 平台 amd64 適合 64 位元平台 noarch 無任何硬體限制 dpkg 操作 dpkg 為 debian PacKaGe 簡稱，為 debian/ubuntu 主要套件管理指令（安裝、升級、移除）
dpkg -c # 列出套件檔案的內容 dpkg -f # 列出套件的控制訊息 dpkg -l # 列出套件的詳細資訊 dpkg -L # 列出套件所安裝的檔案 dpkg -i # 安裝指定套件 dpkg -r # 移除套件 dpkg -P # 完全移除套件，不保留設定檔 dpkg-reconfigure # 重新設定套件安裝 -a # 重新設定所有使用 debconf 安裝的套件 -u # 預設會在畫面上顯示問題 -force # 強迫重新設定套件 轉換 rpm 與 deb 套件 alien # 轉換 rpm 與 deb 套件 --to-deb（-d） # 產生 debian 套件 --to-rpm（-r） # 產生 rpm 套件 --to-tgz（-t） # 產生 tgz 套件 --test（-T） # 測試 deb 套件 套件安裝</description></item><item><title>TCP wrapper</title><link>https://cch0124.github.io/blog/2016-02-27-tcp-wrapper/</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-02-27-tcp-wrapper/</guid><description>TCP wrapper 簡易 TCP 連線存取限制工具 修改設定檔即時生效，因此不必重啟服務 設定檔 /etc/hosts.allow /etc/hosts.deny 限制多，須檢查服務是否支援 $ ldd /usr/sbin/sshd ... libwrap.so.0 =&amp;gt; /lib/x86_64-linux-gnu/libwrap.so.0 (0x00007fd754b92000) ... $ ldd /usr/sbin/nginx # 無 libwrap 因此不支援 格式
執行檔名:來源位置:規則 Example 讓 sshd 只信任 192.168.221.0 和 192.168.18.0 全網段連線，其餘阻擋
$ vi /etc/hosts.allow ALL:127.0.0.1 [::1] sshd:192.168.221. 192.168.18. $ vi /etc/hosts.deny sshd:ALL</description></item><item><title>sudo and su</title><link>https://cch0124.github.io/blog/2016-02-27-sudo-su/</link><pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2016-02-27-sudo-su/</guid><description>sudo 與 su sudo 能夠限制指定使用者在指定主機運行某些命令 有 log 紀錄使用者使用 sudo 做哪些事情 /var/log/auth.log 可用時間戳方式給予使用者限定時間內的權限 指令 visudo 設定檔在 /etc/sudoers，建議是不要直接動這個檔案 su 使用者切換 su -，直接升等為 root，並載入相關設定檔，要輸入 root 密碼 su 切換至 root 權限，但不載入配置 使用者提升最高權限 $ visudo &amp;lt;user&amp;gt; ALL=(ALL) NOPASSWORD:ALL</description></item><item><title>使用者操作 - Ubuntu</title><link>https://cch0124.github.io/blog/2015-08-11-account-management/</link><pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate><guid>https://cch0124.github.io/blog/2015-08-11-account-management/</guid><description>useradd 選項 參數 說明 -c 註解 指定帳號的註解文字 -g 主要群組名稱或 GID 指定帳號的主要群組 -G 附加群組名稱或 GID 指定帳號所屬的附加群組 -d 目錄 指定家目錄 -e 日期 指定新建帳號的使用到期日，過期該帳號無法使用 -u UID 指定帳號的 UID 編號 新增使用者 # useradd testuser # id testuser # id 列出使用者資訊 uid=1002(testuser) gid=1003(testuser) groups=1003(testuser) 指定群組 # useradd -g rd eric # -g 指定群組 # id eric uid=1003(eric) gid=1001(rd) groups=1001(rd) 移除使用者 # userdel USER #無法刪除該使用者家目錄 # userdel -r USER #刪除使用者和家目錄 usermod 選項 參數 說明 -c 註解 改變帳號的註解文字 -g 主要群組名稱或 GID 改變帳號的主要群組 -G 附加群組名稱或 GID 改變或增加帳號所屬的附加群組 -d 目錄 改變家目錄 -e 日期 變更帳號的使用到期日，過期該帳號無法使用 -u UID 變更帳號的 UID 編號 -l 帳號名稱 變更原帳號的名稱 修改使用者帳號 # id tom uid=1004(tom) gid=1001(rd) groups=1001(rd),1004(manager) # usermod -G manager,sales tom # usermod 修改使用者帳號， -G 加入附屬群組(已存在的帳號) # id tom uid=1004(tom) gid=1001(rd) groups=1001(rd),1004(manager),1005(sales)</description></item></channel></rss>